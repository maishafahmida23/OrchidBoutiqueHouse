/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package orchidboutiquehouse;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;


/**
 *
 * @author HP
 */
public class Customer extends javax.swing.JFrame {

    /**
     * Creates new form Customer
     */
    Connection con;
    //PreparedStatement pre = null;
    PreparedStatement pre;
    ResultSet res = null;
    public Customer() {
        initComponents();
        showAll();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        phoneNumber = new javax.swing.JTextField();
        customerid = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        address = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        back = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        update = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        customerName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Orchid Fashion House");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        phoneNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                phoneNumberActionPerformed(evt);
            }
        });
        getContentPane().add(phoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 320, 260, -1));
        getContentPane().add(customerid, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 190, 260, -1));
        getContentPane().add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 365, 260, -1));
        getContentPane().add(address, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 272, 260, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Customer Id", "Customer Name", "Address", "Phone Number", "E-mail"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(22);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 220, 510, 380));

        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 640, 50, 50));

        add.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        add.setForeground(new java.awt.Color(204, 153, 255));
        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        getContentPane().add(add, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 570, -1, -1));

        update.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        update.setForeground(new java.awt.Color(204, 153, 255));
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        getContentPane().add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 570, -1, -1));

        delete.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        delete.setForeground(new java.awt.Color(204, 153, 255));
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        getContentPane().add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 570, -1, -1));
        getContentPane().add(customerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 225, 260, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/customer.jpg"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1300, 750));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void phoneNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_phoneNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_phoneNumberActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
    /* try{
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver"); 
            Connection connection = DriverManager.getConnection( "jdbc:sqlserver://localhost:1433;databaseName=OrchidFashionHouse;"
                     +"encrypt=true;trustServerCertificate=true;"
                    + "selectMethod=cursor;", "sa", "123456" ); 
String query = "insert into Customer(CustomerName, Address, PhoneNumber, Email) values (?,?,?,?)";
            PreparedStatement pst = connection.prepareStatement(query);
            pst.setString(1, customerName.getText());
            pst.setString(2, address.getText());
            pst.setString(3, phoneNumber.getText());
            pst.setString(4, email.getText());
            

            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Registration Successfull!");
            
            showAll();
        }
     
        catch (Exception e) 
            
        { e.printStackTrace();

    }*/
    try {
    Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver"); 
    Connection connection = DriverManager.getConnection(
        "jdbc:sqlserver://localhost:1433;databaseName=OrchidFashionHouse;"
        + "encrypt=true;trustServerCertificate=true;selectMethod=cursor;", 
        "sa", "123456"
    ); 
    
    String CustomerName = customerName.getText();
    String Address = address.getText();
    String PhoneNumber = phoneNumber.getText();
    String Email = email.getText();
    
    if (PhoneNumber.length() != 11) {
        JOptionPane.showMessageDialog(null, "Invalid Phone Number");
    } else if (!(Email.contains("@gmail.com") || Email.contains("@yahoo.com") || Email.contains("@hotmail.com"))) {
        JOptionPane.showMessageDialog(null, "Invalid Email Address");
    } else {
        String query = "INSERT INTO Customer(CustomerName, Address, PhoneNumber, Email) VALUES (?,?,?,?)";
        PreparedStatement pst = connection.prepareStatement(query);
        pst.setString(1, CustomerName);
        pst.setString(2, Address);
        pst.setString(3, PhoneNumber);
        pst.setString(4, Email);
        
        pst.executeUpdate();
        JOptionPane.showMessageDialog(null, "Registration Successful!");
        
        showAll();
        }
    } catch (Exception e) { 
        e.printStackTrace();
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_addActionPerformed
 private void showAll() {
        try {
            con = DriverManager.getConnection( "jdbc:sqlserver://localhost:1433;databaseName=OrchidFashionHouse;"
                     +"encrypt=true;trustServerCertificate=true;"
                    + "selectMethod=cursor;", "sa", "123456" ); 
            pre = con.prepareStatement("select * from CUSTOMER");
            res = pre.executeQuery();
            jTable1.setModel(DbUtils.resultSetToTableModel(res));
            
        } catch (SQLException ex) {
        }
    
    }
    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        new pages().setVisible(true);
        this.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_backMouseClicked

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        
        
        int ID = Integer.parseInt(customerid.getText());
        String name = customerName.getText();
        String Address = address.getText();
        int PhoneNumber = Integer.parseInt(phoneNumber.getText());
        String Email = email.getText();

    try {
        String sql = "UPDATE CUSTOMER SET CUSTOMERNAME = ?, ADDRESS = ?, PHONENUMBER = ?, EMAIL = ? WHERE CUSTOMERID = ?";
        PreparedStatement preparedStatement = con.prepareStatement(sql);
        preparedStatement.setString(1, name);
        preparedStatement.setString(2, Address);
        preparedStatement.setInt(3, PhoneNumber);
        preparedStatement.setString(4, Email);
        preparedStatement.setInt(5, ID);

        int row = preparedStatement.executeUpdate();
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, ex.getMessage(), "Error", JOptionPane.INFORMATION_MESSAGE);
    }

    showAll();
    customerid.setText(null);
    customerName.setText(null);
    address.setText(null);
    phoneNumber.setText(null);
    email.setText(null);
      
     // TODO add your handling code here:
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
   try {
            int ID = Integer.parseInt(customerid.getText());

            String sql = "DELETE from CUSTOMER where CUSTOMERID = " +ID;
            Statement st = con.createStatement();
            int row = st.executeUpdate(sql);
            
            showAll();
            customerid.setText("");
            customerName.setText("");
            phoneNumber.setText("");
            email.setText("");
           

        } catch (SQLException ex) {
            
        }        // TODO add your handling code here:
    }//GEN-LAST:event_deleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Customer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
  try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Men.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Men.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Men.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Men.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Customer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField address;
    private javax.swing.JLabel back;
    private javax.swing.JTextField customerName;
    private javax.swing.JTextField customerid;
    private javax.swing.JButton delete;
    private javax.swing.JTextField email;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField phoneNumber;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
